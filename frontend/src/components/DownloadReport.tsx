import React from 'react';
import { Button } from '@/components/ui/button';
import { Download } from 'lucide-react';
import { jsPDF } from 'jspdf';
import logo from '@/assets/logo.png';
import watermark from '@/assets/watermark.png';
import { AnalysisResult } from './AnalysisResults';

interface DownloadReportProps {
  results: AnalysisResult[];
}

const DownloadReport: React.FC<DownloadReportProps> = ({ results }) => {
  const downloadPDF = () => {
    if (!results || results.length === 0) return;

    const doc = new jsPDF();
    let y = 50; // Start content below header
    const lineSpacing = 7;
    const sectionSpacing = 15;

    // ---- HEADER STRIP ----
    doc.setFillColor(24, 90, 157);
    doc.rect(0, 0, 210, 35, "F");

    // ---- LOGO with rounded corners ----
    doc.saveGraphicsState();
    doc.roundedRect(10, 6, 22, 22, 5, 5, 'F'); // white rounded box
    doc.clip();
    doc.addImage(logo, 'PNG', 10, 6, 22, 22);
    doc.restoreGraphicsState();

    // Title
    doc.setFontSize(24);
    doc.setFont('times', 'bolditalic');
    doc.setTextColor(255, 255, 255);
    doc.text('Skin Condition Analysis Report', 105, 20, { align: 'center' });

    // Tagline
    doc.setFontSize(12);
    doc.setFont('helvetica', 'italic');
    doc.setTextColor(230, 230, 230);
    doc.text('Generated by Skini', 105, 28, { align: 'center' });

    // Date
    doc.setFontSize(11);
    doc.setFont('helvetica', 'italic');
    doc.setTextColor(230, 230, 230);
    doc.text(`Date: ${new Date().toLocaleDateString()}`, 190, 12, { align: 'right' });

    // ---- WATERMARK FUNCTION ----
    const addWatermark = () => {
      const pageWidth = doc.internal.pageSize.getWidth();
      const pageHeight = doc.internal.pageSize.getHeight();
      const wmWidth = 100;
      const wmHeight = 100;

      doc.addImage(
        watermark,
        'PNG',
        pageWidth / 2 - wmWidth / 2,
        pageHeight / 2 - wmHeight / 2,
        wmWidth,
        wmHeight,
        undefined,
        'FAST',
        0
      );
    };

    // Add watermark to the first page
    addWatermark();

    // ---- CONTENT ----
    results.forEach((result, idx) => {
      // Condition Heading
      doc.setFontSize(18);
      doc.setFont('times', 'bold');
      doc.setTextColor(24, 90, 157);
      doc.text(`Condition: ${result.condition}`, 20, y);
      y += 15;

      // Description
      doc.setFontSize(13);
      doc.setFont('times', 'normal');
      doc.setTextColor(50, 50, 50);

      const descText = doc.splitTextToSize(result.description, 160);
      descText.forEach((line) => {
        doc.text(line, 28, y);
        y += lineSpacing + 2;
      });
      y += sectionSpacing;

      // Symptoms
      if (result.symptoms?.length) {
        doc.setFontSize(15);
        doc.setFont('times', 'bold');
        doc.setTextColor(24, 90, 157);
        doc.text('Symptoms:', 20, y);
        y += 12;

        doc.setFontSize(13);
        doc.setFont('times', 'normal');
        doc.setTextColor(60, 60, 60);
        result.symptoms.forEach((s) => {
          const symptomText = doc.splitTextToSize(`• ${s}`, 160);
          symptomText.forEach((line) => {
            doc.text(line, 30, y);
            y += lineSpacing;
          });
          y += 2;
        });
        y += sectionSpacing;
      }

      // Suggestions
      if (result.suggestions?.length) {
        doc.setFontSize(15);
        doc.setFont('times', 'bold');
        doc.setTextColor(24, 90, 157);
        doc.text('Suggestions:', 20, y);
        y += 12;

        doc.setFontSize(13);
        doc.setFont('times', 'normal');
        doc.setTextColor(60, 60, 60);
        result.suggestions.forEach((s) => {
          const suggestionText = doc.splitTextToSize(`• ${s}`, 160);
          suggestionText.forEach((line) => {
            doc.text(line, 30, y);
            y += lineSpacing;
          });
          y += 2;
        });
      }

      y += sectionSpacing;

      // PAGE BREAK
      if (y > 250 && idx !== results.length - 1) {
        doc.addPage();
        addWatermark();
        y = 40;
      }
    });

    // ---- FOOTER ----
    doc.setFontSize(10);
doc.setTextColor(150, 150, 150);
const pageWidth = doc.internal.pageSize.getWidth();
const footerText = '⚠ This is an AI-generated report, not medical advice.';
const textWidth = doc.getTextWidth(footerText);
doc.text(footerText,45, 290);

    doc.save('Skin-Condition-Report.pdf');
  };

  return (
    <Button variant="outline" size="sm" onClick={downloadPDF}>
      <Download className="h-4 w-4 mr-2" />
      Download Report
    </Button>
  );
};

export default DownloadReport;
